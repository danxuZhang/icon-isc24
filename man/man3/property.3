.TH "property" 3 "Version NTU_v1.0" "ICON - Graupel" \" -*- nroff -*-
.ad l
.nh
.SH NAME
property
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBTARGET\fP \fBreal_t\fP \fBdeposition_auto_conversion\fP (\fBreal_t\fP \fBqi\fP, \fBreal_t\fP \fBm_ice\fP, \fBreal_t\fP \fBice_dep\fP)"
.br
.RI "Calculates the rate of ice deposition autoconversion\&. "
.ti -1c
.RI "\fBTARGET\fP \fBreal_t\fP \fBdeposition_factor\fP (\fBreal_t\fP \fBt\fP, \fBreal_t\fP \fBqvsi\fP)"
.br
.RI "Calculates the deposition factor\&. "
.ti -1c
.RI "template<\fBtypename\fP \fBarray_t\fP > \fBTARGET\fP \fBreal_t\fP \fBfall_speed\fP (\fBreal_t\fP \fBdensity\fP, \fBarray_t\fP \fBparams\fP)"
.br
.RI "Calculates the fall speed of hydrometeors\&. "
.ti -1c
.RI "\fBTARGET\fP \fBreal_t\fP \fBice_deposition_nucleation\fP (\fBreal_t\fP \fBt\fP, \fBreal_t\fP \fBqc\fP, \fBreal_t\fP \fBqi\fP, \fBreal_t\fP \fBni\fP, \fBreal_t\fP \fBdvsi\fP, \fBreal_t\fP \fBdt\fP)"
.br
.RI "Calculates the rate of vapor deposition for new ice due to ice deposition nucleation\&. "
.ti -1c
.RI "\fBTARGET\fP \fBreal_t\fP \fBice_mass\fP (\fBreal_t\fP \fBqi\fP, \fBreal_t\fP \fBni\fP)"
.br
.RI "Calculates the mass of an individual ice crystal\&. "
.ti -1c
.RI "\fBTARGET\fP \fBreal_t\fP \fBice_number\fP (\fBreal_t\fP \fBt\fP, \fBreal_t\fP \fBrho\fP)"
.br
.RI "Calculates the ice crystal number concentration following the Cooper parameterization\&. "
.ti -1c
.RI "\fBTARGET\fP \fBreal_t\fP \fBice_sticking\fP (\fBreal_t\fP \fBt\fP)"
.br
.RI "Calculates the sticking efficiency of ice\&. "
.ti -1c
.RI "\fBTARGET\fP \fBreal_t\fP \fBsnow_lambda\fP (\fBreal_t\fP \fBrho\fP, \fBreal_t\fP \fBqs\fP, \fBreal_t\fP \fBns\fP)"
.br
.RI "Calculates the snow lambda parameter\&. "
.ti -1c
.RI "\fBTARGET\fP \fBreal_t\fP \fBsnow_number\fP (\fBreal_t\fP \fBt\fP, \fBreal_t\fP \fBrho\fP, \fBreal_t\fP \fBqs\fP)"
.br
.RI "Calculates the snow number concentration\&. "
.ti -1c
.RI "\fBTARGET\fP \fBreal_t\fP \fBvel_scale_factor\fP (\fBint\fP \fBiqx\fP, \fBreal_t\fP \fBxrho\fP, \fBreal_t\fP \fBrho\fP, \fBreal_t\fP \fBt\fP, \fBreal_t\fP \fBqx\fP)"
.br
.RI "Calculates the velocity scale factor for different types of condensate\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBm0_s\fP = 3\&.0e\-9"
.br
.RI "initial mass of snow crystals "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBb_dep\fP = \fBstatic_cast\fP<\fBreal_t\fP>(2\&.0) / \fBstatic_cast\fP<\fBreal_t\fP>(3\&.0)"
.br
.RI "Exponent for ice deposition autoconversion\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBxcrit\fP = 1\&.0"
.br
.RI "threshold parameter "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBkappa\fP = 2\&.40e\-2"
.br
.RI "thermal conductivity of dry air "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBb\fP = 1\&.94"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBa\fP = \fBthermodyn::als\fP * \fBthermodyn::als\fP / (\fBkappa\fP * \fBthermodyn::rv\fP)"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBmi_max\fP = 1\&.0e\-09"
.br
.RI "maximum mass of cloud ice crystals (kg) "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBa_coop\fP = 5\&.000"
.br
.RI "parameter in cooper fit "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBb_coop\fP = 0\&.304"
.br
.RI "parameter in cooper fit "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBnimax\fP = 250\&.\fBe\fP+3"
.br
.RI "maximal number of ice crystals "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBa_freez\fP = 0\&.09"
.br
.RI "scale factor for freezing depression "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBb_max_exp\fP = 1\&.00"
.br
.RI "maximum for exponential temperature factor "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBeff_min\fP = 0\&.075"
.br
.RI "minimum sticking efficiency "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBeff_fac\fP"
.br
.RI "Scaling factor [1/K] for cloud ice sticking efficiency\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBtcrit\fP"
.br
.RI "Temperature at which cloud ice autoconversion starts\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBa2\fP"
.br
.RI "(with ams*gam(bms+1\&.0_wp) where gam(3) = 2) "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBlmd_0\fP = 1\&.0e+10"
.br
.RI "no snow value of lambda "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBbx\fP"
.br
.RI "Constant = 1\&.0 / (\fBgraupel_ct::bms\fP + 1\&.0) "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBqsmin_\fP = 0\&.0e\-6"
.br
.RI "Minimum value of snow specific mass used in the calculation of snow lambda (kg/kg)\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBtmin\fP = \fBthermodyn::tmelt\fP \- \fBstatic_cast\fP<\fBreal_t\fP>(40\&.)"
.br
.RI "Minimum temperature\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBtmax\fP = \fBthermodyn::tmelt\fP"
.br
.RI "Maximum temperature\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBqsmin\fP = 2\&.0e\-6"
.br
.RI "Minimum value of snow specific mass\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBxa1\fP = \-1\&.65\fBe\fP+0"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBxa2\fP = 5\&.45\fBe\fP\-2"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBxa3\fP = 3\&.27\fBe\fP\-4"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBxb1\fP = 1\&.42\fBe\fP+0"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBxb2\fP = 1\&.19\fBe\fP\-2"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBxb3\fP = 9\&.60e\-5"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBn0s0\fP = 8\&.00e+5"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBn0s1\fP"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBn0s2\fP = \-0\&.107"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBn0s3\fP = 13\&.5"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBn0s4\fP = \fBstatic_cast\fP<\fBreal_t\fP>(0\&.5) * \fBn0s1\fP"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBn0s5\fP = 1\&.\fBe6\fP"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBn0s6\fP = \fBstatic_cast\fP<\fBreal_t\fP>(1\&.\fBe2\fP) * \fBn0s1\fP"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBn0s7\fP = 1\&.\fBe9\fP"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBb_i\fP = \fBstatic_cast\fP<\fBreal_t\fP>(2\&.0) / \fBstatic_cast\fP<\fBreal_t\fP>(3\&.0)"
.br
.ti -1c
.RI "\fBconstexpr\fP \fBreal_t\fP \fBb_s\fP = \-\fBstatic_cast\fP<\fBreal_t\fP>(1\&.0) / \fBstatic_cast\fP<\fBreal_t\fP>(6\&.0)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBTARGET\fP \fBreal_t\fP property::deposition_auto_conversion (\fBreal_t\fP qi, \fBreal_t\fP m_ice, \fBreal_t\fP ice_dep)"

.PP
Calculates the rate of ice deposition autoconversion\&. This function calculates the rate at which ice is converted to snow through deposition autoconversion\&. It takes into account the ice specific mass, ice crystal mass, and the rate of ice deposition\&.
.PP
\fBParameters\fP
.RS 4
\fIqi\fP Ice specific mass (kg/kg)\&. 
.br
\fIm_ice\fP Ice crystal mass (kg)\&. 
.br
\fIice_dep\fP Rate of ice deposition (kg/kg/s)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The rate of ice deposition autoconversion (kg/kg/s)\&. 
.RE
.PP

.PP
Definition at line \fB36\fP of file \fBdeposition_auto_conversion\&.hpp\fP\&.
.SS "\fBTARGET\fP \fBreal_t\fP property::deposition_factor (\fBreal_t\fP t, \fBreal_t\fP qvsi)"

.PP
Calculates the deposition factor\&. The deposition factor is a dimensionless quantity that represents the efficiency of ice deposition growth\&. It is calculated based on temperature and saturation specific vapor mass over ice\&.
.PP
\fBParameters\fP
.RS 4
\fIt\fP Temperature (K)\&. 
.br
\fIqvsi\fP Saturation specific vapor mass over ice (kg/kg)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The deposition factor (dimensionless)\&. 
.RE
.PP

.PP
Definition at line \fB35\fP of file \fBdeposition_factor\&.hpp\fP\&.
.SS "template<\fBtypename\fP \fBarray_t\fP > \fBTARGET\fP \fBreal_t\fP property::fall_speed (\fBreal_t\fP density, \fBarray_t\fP params)"

.PP
Calculates the fall speed of hydrometeors\&. This function calculates the fall speed of hydrometeors based on their density and a set of parameters\&. The fall speed is determined using a power law relationship\&.
.PP
\fBParameters\fP
.RS 4
\fIdensity\fP The density of the hydrometeors (kg/m^3)\&. 
.br
\fIparams\fP An array of parameters used in the fall speed calculation\&.
.IP "\(bu" 2
params[0]: Coefficient of the power law relationship\&.
.IP "\(bu" 2
params[1]: Exponent of the power law relationship\&.
.IP "\(bu" 2
params[2]: Offset added to the density\&. 
.PP
.RE
.PP
\fBReturns\fP
.RS 4
The fall speed of the hydrometeors (m/s)\&. 
.RE
.PP

.PP
Definition at line \fB34\fP of file \fBfall_speed\&.hpp\fP\&.
.SS "\fBTARGET\fP \fBreal_t\fP property::ice_deposition_nucleation (\fBreal_t\fP t, \fBreal_t\fP qc, \fBreal_t\fP qi, \fBreal_t\fP ni, \fBreal_t\fP dvsi, \fBreal_t\fP dt)"

.PP
Calculates the rate of vapor deposition for new ice due to ice deposition nucleation\&. This function calculates the rate of vapor deposition for new ice crystals formed through ice deposition nucleation\&. The rate is determined based on temperature, specific humidity of ice, ice crystal number, vapor excess with respect to ice saturation, and the time step\&.
.PP
\fBParameters\fP
.RS 4
\fIt\fP Temperature (K)\&. 
.br
\fIqc\fP Specific humidity of cloud water (kg/kg)\&. 
.br
\fIqi\fP Specific humidity of ice (kg/kg)\&. 
.br
\fIni\fP Ice crystal number concentration (1/kg)\&. 
.br
\fIdvsi\fP Vapor excess with respect to ice saturation (kg/kg)\&. 
.br
\fIdt\fP Time step (s)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The rate of vapor deposition for new ice (kg/kg/s)\&. 
.RE
.PP

.PP
Definition at line \fB35\fP of file \fBice_deposition\&.hpp\fP\&.
.SS "\fBTARGET\fP \fBreal_t\fP property::ice_mass (\fBreal_t\fP qi, \fBreal_t\fP ni)"

.PP
Calculates the mass of an individual ice crystal\&. This function calculates the mass of an individual ice crystal based on the specific mass of ice and the ice crystal number concentration\&. The mass is constrained to be within a certain range defined by \fBgraupel_ct::m0_ice\fP and mi_max\&.
.PP
\fBParameters\fP
.RS 4
\fIqi\fP Specific mass of ice (kg/kg)\&. 
.br
\fIni\fP Ice crystal number concentration (1/kg)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The mass of an individual ice crystal (kg)\&. 
.RE
.PP

.PP
Definition at line \fB33\fP of file \fBice_mass\&.hpp\fP\&.
.SS "\fBTARGET\fP \fBreal_t\fP property::ice_number (\fBreal_t\fP t, \fBreal_t\fP rho)"

.PP
Calculates the ice crystal number concentration following the Cooper parameterization\&. This function calculates the ice crystal number concentration based on the Cooper parameterization, which depends on the ambient temperature and density\&. The number concentration is constrained to be less than or equal to nimax\&.
.PP
\fBParameters\fP
.RS 4
\fIt\fP Ambient temperature (K)\&. 
.br
\fIrho\fP Ambient density (kg/m^3)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The ice crystal number concentration (1/kg)\&. 
.RE
.PP

.PP
Definition at line \fB35\fP of file \fBice_number\&.hpp\fP\&.
.SS "\fBTARGET\fP \fBreal_t\fP property::ice_sticking (\fBreal_t\fP t)"

.PP
Calculates the sticking efficiency of ice\&. This function calculates the sticking efficiency of ice based on the ambient temperature\&. The sticking efficiency is determined by considering the freezing depression, a minimum efficiency, and a temperature-dependent factor\&. The efficiency is constrained within certain limits\&.
.PP
\fBParameters\fP
.RS 4
\fIt\fP Ambient temperature (K)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The sticking efficiency of ice (dimensionless)\&. 
.RE
.PP

.PP
Definition at line \fB39\fP of file \fBice_sticking\&.hpp\fP\&.
.SS "\fBTARGET\fP \fBreal_t\fP property::snow_lambda (\fBreal_t\fP rho, \fBreal_t\fP qs, \fBreal_t\fP ns)"

.PP
Calculates the snow lambda parameter\&. This function calculates the snow lambda parameter based on the ambient density, snow specific mass, and snow number concentration\&. The lambda parameter is used in the size distribution of snow particles\&. If the snow specific mass is less than or equal to \fBgraupel_ct::qmin\fP, a constant value of lmd_0 is returned\&.
.PP
\fBParameters\fP
.RS 4
\fIrho\fP Ambient density (kg/m^3)\&. 
.br
\fIqs\fP Snow specific mass (kg/kg)\&. 
.br
\fIns\fP Snow number concentration (1/kg)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The snow lambda parameter (1/m)\&. 
.RE
.PP

.PP
Definition at line \fB40\fP of file \fBsnow_lambda\&.hpp\fP\&.
.SS "\fBTARGET\fP \fBreal_t\fP property::snow_number (\fBreal_t\fP t, \fBreal_t\fP rho, \fBreal_t\fP qs)"

.PP
Calculates the snow number concentration\&. This function calculates the snow number concentration based on the ambient temperature, air density, and snow specific mass\&. The calculation involves several empirical constants and coefficients\&. If the snow specific mass is less than or equal to \fBgraupel_ct::qmin\fP, a constant value of n0s0 is returned\&.
.PP
\fBParameters\fP
.RS 4
\fIt\fP Ambient temperature (K)\&. 
.br
\fIrho\fP Ambient air density (kg/m^3)\&. 
.br
\fIqs\fP Snow specific mass (kg/kg)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The snow number concentration (1/kg)\&. 
.RE
.PP

.PP
Definition at line \fB52\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBTARGET\fP \fBreal_t\fP property::vel_scale_factor (\fBint\fP iqx, \fBreal_t\fP xrho, \fBreal_t\fP rho, \fBreal_t\fP t, \fBreal_t\fP qx)"

.PP
Calculates the velocity scale factor for different types of condensate\&. This function calculates the velocity scale factor for different types of condensate based on the condensate type, square root of the density ratio, density of condensate, temperature, and specific mass\&. The velocity scale factor is used to adjust the fall velocity of the condensate\&.
.PP
\fBParameters\fP
.RS 4
\fIiqx\fP Index of the condensate type (lqi for cloud ice, lqs for snow, etc\&.)\&. 
.br
\fIxrho\fP Square root of the density ratio (sqrt(rho_00/rho))\&. 
.br
\fIrho\fP Density of the condensate (kg/m^3)\&. 
.br
\fIt\fP Temperature (K)\&. 
.br
\fIqx\fP Specific mass of the condensate (kg/kg)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The velocity scale factor for the specified condensate type (dimensionless)\&. 
.RE
.PP

.PP
Definition at line \fB40\fP of file \fBvel_scale_factor\&.hpp\fP\&.
.SH "Variable Documentation"
.PP 
.SS "\fBconstexpr\fP \fBreal_t\fP property::a = \fBthermodyn::als\fP * \fBthermodyn::als\fP / (\fBkappa\fP * \fBthermodyn::rv\fP)\fR [constexpr]\fP"

.PP
Definition at line \fB22\fP of file \fBdeposition_factor\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::a2\fR [constexpr]\fP"
\fBInitial value:\fP.PP
.nf
=
    graupel_ct::ams *
    static_cast<real_t>(2\&.0)
.fi

.PP
(with ams*gam(bms+1\&.0_wp) where gam(3) = 2) 
.PP
Definition at line \fB20\fP of file \fBsnow_lambda\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::a_coop = 5\&.000\fR [constexpr]\fP"

.PP
parameter in cooper fit 
.PP
Definition at line \fB20\fP of file \fBice_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::a_freez = 0\&.09\fR [constexpr]\fP"

.PP
scale factor for freezing depression 
.PP
Definition at line \fB20\fP of file \fBice_sticking\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::b = 1\&.94\fR [constexpr]\fP"

.PP
Definition at line \fB21\fP of file \fBdeposition_factor\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::b_coop = 0\&.304\fR [constexpr]\fP"

.PP
parameter in cooper fit 
.PP
Definition at line \fB21\fP of file \fBice_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::b_dep = \fBstatic_cast\fP<\fBreal_t\fP>(2\&.0) / \fBstatic_cast\fP<\fBreal_t\fP>(3\&.0)\fR [constexpr]\fP"

.PP
Exponent for ice deposition autoconversion\&. 
.PP
Definition at line \fB21\fP of file \fBdeposition_auto_conversion\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::b_i = \fBstatic_cast\fP<\fBreal_t\fP>(2\&.0) / \fBstatic_cast\fP<\fBreal_t\fP>(3\&.0)\fR [constexpr]\fP"

.PP
Definition at line \fB21\fP of file \fBvel_scale_factor\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::b_max_exp = 1\&.00\fR [constexpr]\fP"

.PP
maximum for exponential temperature factor 
.PP
Definition at line \fB21\fP of file \fBice_sticking\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::b_s = \-\fBstatic_cast\fP<\fBreal_t\fP>(1\&.0) / \fBstatic_cast\fP<\fBreal_t\fP>(6\&.0)\fR [constexpr]\fP"

.PP
Definition at line \fB22\fP of file \fBvel_scale_factor\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::bx\fR [constexpr]\fP"
\fBInitial value:\fP.PP
.nf
= 
    static_cast<real_t>(1\&.0) / (graupel_ct::bms + static_cast<real_t>(1\&.0))
.fi

.PP
Constant = 1\&.0 / (\fBgraupel_ct::bms\fP + 1\&.0) 
.PP
Definition at line \fB24\fP of file \fBsnow_lambda\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::eff_fac\fR [constexpr]\fP"
\fBInitial value:\fP.PP
.nf
=
    3\&.5E\-3
.fi

.PP
Scaling factor [1/K] for cloud ice sticking efficiency\&. 
.PP
Definition at line \fB23\fP of file \fBice_sticking\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::eff_min = 0\&.075\fR [constexpr]\fP"

.PP
minimum sticking efficiency 
.PP
Definition at line \fB22\fP of file \fBice_sticking\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::kappa = 2\&.40e\-2\fR [constexpr]\fP"

.PP
thermal conductivity of dry air 
.PP
Definition at line \fB20\fP of file \fBdeposition_factor\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::lmd_0 = 1\&.0e+10\fR [constexpr]\fP"

.PP
no snow value of lambda 
.PP
Definition at line \fB23\fP of file \fBsnow_lambda\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::m0_s = 3\&.0e\-9\fR [constexpr]\fP"

.PP
initial mass of snow crystals 
.PP
Definition at line \fB20\fP of file \fBdeposition_auto_conversion\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::mi_max = 1\&.0e\-09\fR [constexpr]\fP"

.PP
maximum mass of cloud ice crystals (kg) 
.PP
Definition at line \fB20\fP of file \fBice_mass\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::n0s0 = 8\&.00e+5\fR [constexpr]\fP"

.PP
Definition at line \fB29\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::n0s1\fR [constexpr]\fP"
\fBInitial value:\fP.PP
.nf
=
    static_cast<real_t>(13\&.5) * static_cast<real_t>(5\&.65e+05)
.fi

.PP
Definition at line \fB30\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::n0s2 = \-0\&.107\fR [constexpr]\fP"

.PP
Definition at line \fB32\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::n0s3 = 13\&.5\fR [constexpr]\fP"

.PP
Definition at line \fB33\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::n0s4 = \fBstatic_cast\fP<\fBreal_t\fP>(0\&.5) * \fBn0s1\fP\fR [constexpr]\fP"

.PP
Definition at line \fB34\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::n0s5 = 1\&.\fBe6\fP\fR [constexpr]\fP"

.PP
Definition at line \fB35\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::n0s6 = \fBstatic_cast\fP<\fBreal_t\fP>(1\&.\fBe2\fP) * \fBn0s1\fP\fR [constexpr]\fP"

.PP
Definition at line \fB36\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::n0s7 = 1\&.\fBe9\fP\fR [constexpr]\fP"

.PP
Definition at line \fB37\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::nimax = 250\&.\fBe\fP+3\fR [constexpr]\fP"

.PP
maximal number of ice crystals 
.PP
Definition at line \fB22\fP of file \fBice_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::qsmin = 2\&.0e\-6\fR [constexpr]\fP"

.PP
Minimum value of snow specific mass\&. 
.PP
Definition at line \fB22\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::qsmin_ = 0\&.0e\-6\fR [constexpr]\fP"

.PP
Minimum value of snow specific mass used in the calculation of snow lambda (kg/kg)\&. 
.PP
Definition at line \fB26\fP of file \fBsnow_lambda\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::tcrit\fR [constexpr]\fP"
\fBInitial value:\fP.PP
.nf
=
    thermodyn::tmelt \-
    85\&.
.fi

.PP
Temperature at which cloud ice autoconversion starts\&. 
.PP
Definition at line \fB25\fP of file \fBice_sticking\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::tmax = \fBthermodyn::tmelt\fP\fR [constexpr]\fP"

.PP
Maximum temperature\&. 
.PP
Definition at line \fB21\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::tmin = \fBthermodyn::tmelt\fP \- \fBstatic_cast\fP<\fBreal_t\fP>(40\&.)\fR [constexpr]\fP"

.PP
Minimum temperature\&. 
.PP
Definition at line \fB20\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::xa1 = \-1\&.65\fBe\fP+0\fR [constexpr]\fP"

.PP
Definition at line \fB23\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::xa2 = 5\&.45\fBe\fP\-2\fR [constexpr]\fP"

.PP
Definition at line \fB24\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::xa3 = 3\&.27\fBe\fP\-4\fR [constexpr]\fP"

.PP
Definition at line \fB25\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::xb1 = 1\&.42\fBe\fP+0\fR [constexpr]\fP"

.PP
Definition at line \fB26\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::xb2 = 1\&.19\fBe\fP\-2\fR [constexpr]\fP"

.PP
Definition at line \fB27\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::xb3 = 9\&.60e\-5\fR [constexpr]\fP"

.PP
Definition at line \fB28\fP of file \fBsnow_number\&.hpp\fP\&.
.SS "\fBconstexpr\fP \fBreal_t\fP property::xcrit = 1\&.0\fR [constexpr]\fP"

.PP
threshold parameter 
.PP
Definition at line \fB22\fP of file \fBdeposition_auto_conversion\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ICON - Graupel from the source code\&.
